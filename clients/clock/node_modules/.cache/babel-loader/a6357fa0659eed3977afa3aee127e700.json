{"ast":null,"code":"import warning from 'tiny-warning';\nvar semiWithNl = /;\\n/;\n/**\n * Naive CSS parser.\n * - Supports only rule body (no selectors)\n * - Requires semicolon and new line after the value (except of last line)\n * - No nested rules support\n */\n\nvar parse = function parse(cssText) {\n  var style = {};\n  var split = cssText.split(semiWithNl);\n\n  for (var i = 0; i < split.length; i++) {\n    var decl = (split[i] || '').trim();\n    if (!decl) continue;\n    var colonIndex = decl.indexOf(':');\n\n    if (colonIndex === -1) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Malformed CSS string \\\"\" + decl + \"\\\"\") : void 0;\n      continue;\n    }\n\n    var prop = decl.substr(0, colonIndex).trim();\n    var value = decl.substr(colonIndex + 1).trim();\n    style[prop] = value;\n  }\n\n  return style;\n};\n\nvar onProcessRule = function onProcessRule(rule) {\n  if (typeof rule.style === 'string') {\n    rule.style = parse(rule.style);\n  }\n};\n\nfunction templatePlugin() {\n  return {\n    onProcessRule: onProcessRule\n  };\n}\n\nexport default templatePlugin;","map":{"version":3,"names":["warning","semiWithNl","parse","cssText","style","split","i","length","decl","trim","colonIndex","indexOf","process","env","NODE_ENV","prop","substr","value","onProcessRule","rule","templatePlugin"],"sources":["C:/Users/Mike/Documents/Projects/react-desktop/core/node_modules/jss-plugin-template/dist/jss-plugin-template.esm.js"],"sourcesContent":["import warning from 'tiny-warning';\n\nvar semiWithNl = /;\\n/;\n/**\n * Naive CSS parser.\n * - Supports only rule body (no selectors)\n * - Requires semicolon and new line after the value (except of last line)\n * - No nested rules support\n */\n\nvar parse = function parse(cssText) {\n  var style = {};\n  var split = cssText.split(semiWithNl);\n\n  for (var i = 0; i < split.length; i++) {\n    var decl = (split[i] || '').trim();\n    if (!decl) continue;\n    var colonIndex = decl.indexOf(':');\n\n    if (colonIndex === -1) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Malformed CSS string \\\"\" + decl + \"\\\"\") : void 0;\n      continue;\n    }\n\n    var prop = decl.substr(0, colonIndex).trim();\n    var value = decl.substr(colonIndex + 1).trim();\n    style[prop] = value;\n  }\n\n  return style;\n};\n\nvar onProcessRule = function onProcessRule(rule) {\n  if (typeof rule.style === 'string') {\n    rule.style = parse(rule.style);\n  }\n};\n\nfunction templatePlugin() {\n  return {\n    onProcessRule: onProcessRule\n  };\n}\n\nexport default templatePlugin;\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AAEA,IAAIC,UAAU,GAAG,KAAjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,KAAK,GAAG,SAASA,KAAT,CAAeC,OAAf,EAAwB;EAClC,IAAIC,KAAK,GAAG,EAAZ;EACA,IAAIC,KAAK,GAAGF,OAAO,CAACE,KAAR,CAAcJ,UAAd,CAAZ;;EAEA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACrC,IAAIE,IAAI,GAAG,CAACH,KAAK,CAACC,CAAD,CAAL,IAAY,EAAb,EAAiBG,IAAjB,EAAX;IACA,IAAI,CAACD,IAAL,EAAW;IACX,IAAIE,UAAU,GAAGF,IAAI,CAACG,OAAL,CAAa,GAAb,CAAjB;;IAEA,IAAID,UAAU,KAAK,CAAC,CAApB,EAAuB;MACrBE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCd,OAAO,CAAC,KAAD,EAAQ,kCAAkCQ,IAAlC,GAAyC,IAAjD,CAA/C,GAAwG,KAAK,CAA7G;MACA;IACD;;IAED,IAAIO,IAAI,GAAGP,IAAI,CAACQ,MAAL,CAAY,CAAZ,EAAeN,UAAf,EAA2BD,IAA3B,EAAX;IACA,IAAIQ,KAAK,GAAGT,IAAI,CAACQ,MAAL,CAAYN,UAAU,GAAG,CAAzB,EAA4BD,IAA5B,EAAZ;IACAL,KAAK,CAACW,IAAD,CAAL,GAAcE,KAAd;EACD;;EAED,OAAOb,KAAP;AACD,CApBD;;AAsBA,IAAIc,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;EAC/C,IAAI,OAAOA,IAAI,CAACf,KAAZ,KAAsB,QAA1B,EAAoC;IAClCe,IAAI,CAACf,KAAL,GAAaF,KAAK,CAACiB,IAAI,CAACf,KAAN,CAAlB;EACD;AACF,CAJD;;AAMA,SAASgB,cAAT,GAA0B;EACxB,OAAO;IACLF,aAAa,EAAEA;EADV,CAAP;AAGD;;AAED,eAAeE,cAAf"},"metadata":{},"sourceType":"module"}