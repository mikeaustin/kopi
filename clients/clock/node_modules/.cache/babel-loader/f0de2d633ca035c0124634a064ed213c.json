{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport warning from 'tiny-warning';\nvar separatorRegExp = /\\s*,\\s*/g;\nvar parentRegExp = /&/g;\nvar refRegExp = /\\$([\\w-]+)/g;\n/**\n * Convert nested rules to separate, remove them from original styles.\n */\n\nfunction jssNested() {\n  // Get a function to be used for $ref replacement.\n  function getReplaceRef(container, sheet) {\n    return function (match, key) {\n      var rule = container.getRule(key) || sheet && sheet.getRule(key);\n\n      if (rule) {\n        return rule.selector;\n      }\n\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Could not find the referenced rule \\\"\" + key + \"\\\" in \\\"\" + (container.options.meta || container.toString()) + \"\\\".\") : void 0;\n      return key;\n    };\n  }\n\n  function replaceParentRefs(nestedProp, parentProp) {\n    var parentSelectors = parentProp.split(separatorRegExp);\n    var nestedSelectors = nestedProp.split(separatorRegExp);\n    var result = '';\n\n    for (var i = 0; i < parentSelectors.length; i++) {\n      var parent = parentSelectors[i];\n\n      for (var j = 0; j < nestedSelectors.length; j++) {\n        var nested = nestedSelectors[j];\n        if (result) result += ', '; // Replace all & by the parent or prefix & with the parent.\n\n        result += nested.indexOf('&') !== -1 ? nested.replace(parentRegExp, parent) : parent + \" \" + nested;\n      }\n    }\n\n    return result;\n  }\n\n  function getOptions(rule, container, prevOptions) {\n    // Options has been already created, now we only increase index.\n    if (prevOptions) return _extends({}, prevOptions, {\n      index: prevOptions.index + 1\n    });\n    var nestingLevel = rule.options.nestingLevel;\n    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;\n\n    var options = _extends({}, rule.options, {\n      nestingLevel: nestingLevel,\n      index: container.indexOf(rule) + 1 // We don't need the parent name to be set options for chlid.\n\n    });\n\n    delete options.name;\n    return options;\n  }\n\n  function onProcessStyle(style, rule, sheet) {\n    if (rule.type !== 'style') return style;\n    var styleRule = rule;\n    var container = styleRule.options.parent;\n    var options;\n    var replaceRef;\n\n    for (var prop in style) {\n      var isNested = prop.indexOf('&') !== -1;\n      var isNestedConditional = prop[0] === '@';\n      if (!isNested && !isNestedConditional) continue;\n      options = getOptions(styleRule, container, options);\n\n      if (isNested) {\n        var selector = replaceParentRefs(prop, styleRule.selector); // Lazily create the ref replacer function just once for\n        // all nested rules within the sheet.\n\n        if (!replaceRef) replaceRef = getReplaceRef(container, sheet); // Replace all $refs.\n\n        selector = selector.replace(refRegExp, replaceRef);\n        var name = styleRule.key + \"-\" + prop;\n\n        if ('replaceRule' in container) {\n          // for backward compatibility\n          container.replaceRule(name, style[prop], _extends({}, options, {\n            selector: selector\n          }));\n        } else {\n          container.addRule(name, style[prop], _extends({}, options, {\n            selector: selector\n          }));\n        }\n      } else if (isNestedConditional) {\n        // Place conditional right after the parent rule to ensure right ordering.\n        container.addRule(prop, {}, options).addRule(styleRule.key, style[prop], {\n          selector: styleRule.selector\n        });\n      }\n\n      delete style[prop];\n    }\n\n    return style;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\n\nexport default jssNested;","map":{"version":3,"names":["_extends","warning","separatorRegExp","parentRegExp","refRegExp","jssNested","getReplaceRef","container","sheet","match","key","rule","getRule","selector","process","env","NODE_ENV","options","meta","toString","replaceParentRefs","nestedProp","parentProp","parentSelectors","split","nestedSelectors","result","i","length","parent","j","nested","indexOf","replace","getOptions","prevOptions","index","nestingLevel","undefined","name","onProcessStyle","style","type","styleRule","replaceRef","prop","isNested","isNestedConditional","replaceRule","addRule"],"sources":["C:/Users/Mike/Documents/Projects/react-desktop/core/node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport warning from 'tiny-warning';\n\nvar separatorRegExp = /\\s*,\\s*/g;\nvar parentRegExp = /&/g;\nvar refRegExp = /\\$([\\w-]+)/g;\n/**\n * Convert nested rules to separate, remove them from original styles.\n */\n\nfunction jssNested() {\n  // Get a function to be used for $ref replacement.\n  function getReplaceRef(container, sheet) {\n    return function (match, key) {\n      var rule = container.getRule(key) || sheet && sheet.getRule(key);\n\n      if (rule) {\n        return rule.selector;\n      }\n\n      process.env.NODE_ENV !== \"production\" ? warning(false, \"[JSS] Could not find the referenced rule \\\"\" + key + \"\\\" in \\\"\" + (container.options.meta || container.toString()) + \"\\\".\") : void 0;\n      return key;\n    };\n  }\n\n  function replaceParentRefs(nestedProp, parentProp) {\n    var parentSelectors = parentProp.split(separatorRegExp);\n    var nestedSelectors = nestedProp.split(separatorRegExp);\n    var result = '';\n\n    for (var i = 0; i < parentSelectors.length; i++) {\n      var parent = parentSelectors[i];\n\n      for (var j = 0; j < nestedSelectors.length; j++) {\n        var nested = nestedSelectors[j];\n        if (result) result += ', '; // Replace all & by the parent or prefix & with the parent.\n\n        result += nested.indexOf('&') !== -1 ? nested.replace(parentRegExp, parent) : parent + \" \" + nested;\n      }\n    }\n\n    return result;\n  }\n\n  function getOptions(rule, container, prevOptions) {\n    // Options has been already created, now we only increase index.\n    if (prevOptions) return _extends({}, prevOptions, {\n      index: prevOptions.index + 1\n    });\n    var nestingLevel = rule.options.nestingLevel;\n    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;\n\n    var options = _extends({}, rule.options, {\n      nestingLevel: nestingLevel,\n      index: container.indexOf(rule) + 1 // We don't need the parent name to be set options for chlid.\n\n    });\n\n    delete options.name;\n    return options;\n  }\n\n  function onProcessStyle(style, rule, sheet) {\n    if (rule.type !== 'style') return style;\n    var styleRule = rule;\n    var container = styleRule.options.parent;\n    var options;\n    var replaceRef;\n\n    for (var prop in style) {\n      var isNested = prop.indexOf('&') !== -1;\n      var isNestedConditional = prop[0] === '@';\n      if (!isNested && !isNestedConditional) continue;\n      options = getOptions(styleRule, container, options);\n\n      if (isNested) {\n        var selector = replaceParentRefs(prop, styleRule.selector); // Lazily create the ref replacer function just once for\n        // all nested rules within the sheet.\n\n        if (!replaceRef) replaceRef = getReplaceRef(container, sheet); // Replace all $refs.\n\n        selector = selector.replace(refRegExp, replaceRef);\n        var name = styleRule.key + \"-\" + prop;\n\n        if ('replaceRule' in container) {\n          // for backward compatibility\n          container.replaceRule(name, style[prop], _extends({}, options, {\n            selector: selector\n          }));\n        } else {\n          container.addRule(name, style[prop], _extends({}, options, {\n            selector: selector\n          }));\n        }\n      } else if (isNestedConditional) {\n        // Place conditional right after the parent rule to ensure right ordering.\n        container.addRule(prop, {}, options).addRule(styleRule.key, style[prop], {\n          selector: styleRule.selector\n        });\n      }\n\n      delete style[prop];\n    }\n\n    return style;\n  }\n\n  return {\n    onProcessStyle: onProcessStyle\n  };\n}\n\nexport default jssNested;\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,IAAIC,eAAe,GAAG,UAAtB;AACA,IAAIC,YAAY,GAAG,IAAnB;AACA,IAAIC,SAAS,GAAG,aAAhB;AACA;AACA;AACA;;AAEA,SAASC,SAAT,GAAqB;EACnB;EACA,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,KAAlC,EAAyC;IACvC,OAAO,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;MAC3B,IAAIC,IAAI,GAAGJ,SAAS,CAACK,OAAV,CAAkBF,GAAlB,KAA0BF,KAAK,IAAIA,KAAK,CAACI,OAAN,CAAcF,GAAd,CAA9C;;MAEA,IAAIC,IAAJ,EAAU;QACR,OAAOA,IAAI,CAACE,QAAZ;MACD;;MAEDC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCf,OAAO,CAAC,KAAD,EAAQ,gDAAgDS,GAAhD,GAAsD,UAAtD,IAAoEH,SAAS,CAACU,OAAV,CAAkBC,IAAlB,IAA0BX,SAAS,CAACY,QAAV,EAA9F,IAAsH,KAA9H,CAA/C,GAAsL,KAAK,CAA3L;MACA,OAAOT,GAAP;IACD,CATD;EAUD;;EAED,SAASU,iBAAT,CAA2BC,UAA3B,EAAuCC,UAAvC,EAAmD;IACjD,IAAIC,eAAe,GAAGD,UAAU,CAACE,KAAX,CAAiBtB,eAAjB,CAAtB;IACA,IAAIuB,eAAe,GAAGJ,UAAU,CAACG,KAAX,CAAiBtB,eAAjB,CAAtB;IACA,IAAIwB,MAAM,GAAG,EAAb;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,eAAe,CAACK,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;MAC/C,IAAIE,MAAM,GAAGN,eAAe,CAACI,CAAD,CAA5B;;MAEA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,eAAe,CAACG,MAApC,EAA4CE,CAAC,EAA7C,EAAiD;QAC/C,IAAIC,MAAM,GAAGN,eAAe,CAACK,CAAD,CAA5B;QACA,IAAIJ,MAAJ,EAAYA,MAAM,IAAI,IAAV,CAFmC,CAEnB;;QAE5BA,MAAM,IAAIK,MAAM,CAACC,OAAP,CAAe,GAAf,MAAwB,CAAC,CAAzB,GAA6BD,MAAM,CAACE,OAAP,CAAe9B,YAAf,EAA6B0B,MAA7B,CAA7B,GAAoEA,MAAM,GAAG,GAAT,GAAeE,MAA7F;MACD;IACF;;IAED,OAAOL,MAAP;EACD;;EAED,SAASQ,UAAT,CAAoBvB,IAApB,EAA0BJ,SAA1B,EAAqC4B,WAArC,EAAkD;IAChD;IACA,IAAIA,WAAJ,EAAiB,OAAOnC,QAAQ,CAAC,EAAD,EAAKmC,WAAL,EAAkB;MAChDC,KAAK,EAAED,WAAW,CAACC,KAAZ,GAAoB;IADqB,CAAlB,CAAf;IAGjB,IAAIC,YAAY,GAAG1B,IAAI,CAACM,OAAL,CAAaoB,YAAhC;IACAA,YAAY,GAAGA,YAAY,KAAKC,SAAjB,GAA6B,CAA7B,GAAiCD,YAAY,GAAG,CAA/D;;IAEA,IAAIpB,OAAO,GAAGjB,QAAQ,CAAC,EAAD,EAAKW,IAAI,CAACM,OAAV,EAAmB;MACvCoB,YAAY,EAAEA,YADyB;MAEvCD,KAAK,EAAE7B,SAAS,CAACyB,OAAV,CAAkBrB,IAAlB,IAA0B,CAFM,CAEJ;;IAFI,CAAnB,CAAtB;;IAMA,OAAOM,OAAO,CAACsB,IAAf;IACA,OAAOtB,OAAP;EACD;;EAED,SAASuB,cAAT,CAAwBC,KAAxB,EAA+B9B,IAA/B,EAAqCH,KAArC,EAA4C;IAC1C,IAAIG,IAAI,CAAC+B,IAAL,KAAc,OAAlB,EAA2B,OAAOD,KAAP;IAC3B,IAAIE,SAAS,GAAGhC,IAAhB;IACA,IAAIJ,SAAS,GAAGoC,SAAS,CAAC1B,OAAV,CAAkBY,MAAlC;IACA,IAAIZ,OAAJ;IACA,IAAI2B,UAAJ;;IAEA,KAAK,IAAIC,IAAT,IAAiBJ,KAAjB,EAAwB;MACtB,IAAIK,QAAQ,GAAGD,IAAI,CAACb,OAAL,CAAa,GAAb,MAAsB,CAAC,CAAtC;MACA,IAAIe,mBAAmB,GAAGF,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAtC;MACA,IAAI,CAACC,QAAD,IAAa,CAACC,mBAAlB,EAAuC;MACvC9B,OAAO,GAAGiB,UAAU,CAACS,SAAD,EAAYpC,SAAZ,EAAuBU,OAAvB,CAApB;;MAEA,IAAI6B,QAAJ,EAAc;QACZ,IAAIjC,QAAQ,GAAGO,iBAAiB,CAACyB,IAAD,EAAOF,SAAS,CAAC9B,QAAjB,CAAhC,CADY,CACgD;QAC5D;;QAEA,IAAI,CAAC+B,UAAL,EAAiBA,UAAU,GAAGtC,aAAa,CAACC,SAAD,EAAYC,KAAZ,CAA1B,CAJL,CAImD;;QAE/DK,QAAQ,GAAGA,QAAQ,CAACoB,OAAT,CAAiB7B,SAAjB,EAA4BwC,UAA5B,CAAX;QACA,IAAIL,IAAI,GAAGI,SAAS,CAACjC,GAAV,GAAgB,GAAhB,GAAsBmC,IAAjC;;QAEA,IAAI,iBAAiBtC,SAArB,EAAgC;UAC9B;UACAA,SAAS,CAACyC,WAAV,CAAsBT,IAAtB,EAA4BE,KAAK,CAACI,IAAD,CAAjC,EAAyC7C,QAAQ,CAAC,EAAD,EAAKiB,OAAL,EAAc;YAC7DJ,QAAQ,EAAEA;UADmD,CAAd,CAAjD;QAGD,CALD,MAKO;UACLN,SAAS,CAAC0C,OAAV,CAAkBV,IAAlB,EAAwBE,KAAK,CAACI,IAAD,CAA7B,EAAqC7C,QAAQ,CAAC,EAAD,EAAKiB,OAAL,EAAc;YACzDJ,QAAQ,EAAEA;UAD+C,CAAd,CAA7C;QAGD;MACF,CAnBD,MAmBO,IAAIkC,mBAAJ,EAAyB;QAC9B;QACAxC,SAAS,CAAC0C,OAAV,CAAkBJ,IAAlB,EAAwB,EAAxB,EAA4B5B,OAA5B,EAAqCgC,OAArC,CAA6CN,SAAS,CAACjC,GAAvD,EAA4D+B,KAAK,CAACI,IAAD,CAAjE,EAAyE;UACvEhC,QAAQ,EAAE8B,SAAS,CAAC9B;QADmD,CAAzE;MAGD;;MAED,OAAO4B,KAAK,CAACI,IAAD,CAAZ;IACD;;IAED,OAAOJ,KAAP;EACD;;EAED,OAAO;IACLD,cAAc,EAAEA;EADX,CAAP;AAGD;;AAED,eAAenC,SAAf"},"metadata":{},"sourceType":"module"}