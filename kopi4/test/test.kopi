print 1, 2, 3

print (
  (a, b => a + b) 2, 3
  2 * (3 + 4) + 1
  match 5 (0 => 1), (n => n * n)
)

(x, k => (x, k => k x + 1) x + x, k) 5, (x => x)

fix = f => (x => f (y => x x y)) x => f (y => x x y)

factorial = fix factorial => n => match n (
  0 => 1
  n => n * (factorial n - 1)
)

print (factorial 5)

print (let (x = 2, y = 3) => x + y)

5 # input "Name?"

print (1..5 | map (n) => n * n)

0 # square x = x * x
0 # print (square 5)

(0, x => x) | getMatches 0, 1

(Point (1, 2)) + (Point (2, 3))
