generator = \(
    yield 1
    yield 2
    yield 3
  )
)

g = spawn oneTwoThree

next g 1


randomGenerator | map(x => x * x) | take 5

repeat random | take 5


randoms = (next: () => random ())

# Stream iterator

# Can you yield and return from block.reduce ?


value, next = next ()


next = repeat (n) => n + 1
value, next = next ()


next = repeat (n) => print ("n", n)
value, next = next ()
