@Comparable = (:compare, :lessThan = (this) => (that) => (this | compare that) < 0) => (
  compare: compare
  lessThan: lessThan
)

Point = type (x: Int, y: Int)

extend Point $ @Comparable (
  compare: (this) => (that) => match () (
    _ [this.x < that.x] => (0 - 1)
    _ [this.x > that.x] => (0 + 1)
    _                   => 0
  )
)

print $ Point (x: 10, y: 20) | compare (Point (x: 30, y: 40))
print $ Point (x: 10, y: 20) | lessThan (Point (x: 20, y: 30))
print $ Point (x: 30, y: 20) | lessThan (Point (x: 20, y: 30))
