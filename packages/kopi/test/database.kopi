fix = f => (x => f (y => x x y)) x => f (y => x x y)
select = fns => yield (x => match x fns)

database = () => {
  loop = (value) => {
    _, value = yield command => match command (
      "get"             => value
      "set", newValue   => newValue
      "update", updater => updater value
    )
    loop value
  }
  loop 0
}

database = () => {
  loop = (value) => {
    _, result = select (
      "get"             => value
      "set", newValue   => newValue
      "update", updater => updater value
    )
    loop result
  }
  loop 0
}

database = () => {
  let $ fix loop => (value = 0) => {
    _, result = select (
      "get"             => value
      "set", newValue   => newValue
      "update", updater => updater value
    )
    loop result
  }
}

db = spawn database

print $ send db "get"
send db $ "set", 5
print $ send db "get"
send db $ "set", 10
print $ send db "get"
send db $ "update", (x => x * 2)
print $ send db "get"
