fix = f => (x => f (y => x x y)) x => f (y => x x y)
select = fns => yield (x => match x fns)

# database = () => {
#   loop = (value) => {
#     value = yield command => match command (
#       "get"           => value
#       "set", newValue => newValue
#     )
#     loop (value)
#   }
#   loop (0)
# }

# database = () => {
#   loop = (value) => loop $ select (
#     "get"           => value
#     "set", newValue => newValue
#   )
#   loop (0)
# }

# database = () => {
#   let loop (value = 0) => loop $ select (
#     "get"           => value
#     "set", newValue => newValue
#   )
# }

database = () => {
  let $ fix loop => (value = 0) => loop $ select (
    "get"           => value
    "set", newValue => newValue
  )
}

db = spawn database

print $ send db "get"
print $ send db "set", 5
print $ send db "get"
print $ send db "set", 10
print $ send db "get"
