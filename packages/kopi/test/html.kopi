print ""
print "== html =========================================="
print ""

html = props => children => ("element", "html", props, children)
ul = props => children => ("element", "ul", props, children)
li = props => children => ("element", "li", props, children)
text = value => ("text", value)

indent = (n) => {
  loop = (n, str) => match n (
    0 => str
    _ => loop (n - 1), (str ++ "  ")
  )
  loop (n, "")
}

generate = (node, level) => {
  match node (
    "text", value => {
      indent level ++ string value ++ char 10
    }
    "element", tag, props, children => {
      inner = children | xmap child => generate (child, level + 1)
      (indent level) ++ "<" ++ tag ++ ">" ++ (char 10) ++ (
        inner | xjoin ""
      ) ++ (indent level) ++ "</" ++ tag ++ ">" ++ (char 10)
    }
  )
}

htmlNodes = (
  html () [
    text "Hello"
    ul () [
      li () [(text 1)]
      li () [(text 2)]
    ]
  ]
)

html = generate (htmlNodes, 0)

print html

export (
  generate
  html
  text
  ul
  li
)
