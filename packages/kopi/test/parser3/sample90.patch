2,3c2,3
< // This rules allow us to parse a number, such as "5"
< // The end result is the value of the parsed number
---
> // Parses syntax into an AST, then interprets it directly.
> // Accepts expressions such as "2 * (3 + 4)".
46c46
<   = left:NumericLiteral _ op:("*" / "/") _ right:NumericLiteral {
---
>   = left:PrimaryExpression _ op:("*" / "/") _ right:PrimaryExpression {
53a54,59
>   / PrimaryExpression
> 
> PrimaryExpression
>   = "(" expr:AddExpression ")" {
>     return expr;
>   }
