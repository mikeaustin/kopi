:generateHtmlString, :html, :body, :text = import "test/html.kopi"

template (message) = generateHtmlString $ (
  html () [
    body () [
      text "<p>This is a dynamic document</p>"
      text message
    ]
  ]
), 0

server = spawn () => {
  loop (requests = 0) => {
    yield (request) => match request.url (
      "/favicon.ico" => ""
      "/"            => template ("[" (String requests) " requests] <a href='test.html'>Link to static document</a>")
       url           => read ("test/" url)
    )

    (requests + 1)
  }
}

listen 8080 server

# print $ send server 1
# print $ send server 2
