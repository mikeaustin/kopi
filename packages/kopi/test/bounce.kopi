gravity = Vector [0.0, 0.1]
esc = (char 27)

print $ esc "[?25l"

loop (position = Vector [40, 1], velocity = Vector [1, 0]) => {
  newVelocity = match () (
    _ [position.y + velocity.y > 20] => Vector [velocity.x, 0 - velocity.y]
    _ [position.x + velocity.x > 80] => Vector [0 - velocity.x, velocity.y]
    _ [position.x + velocity.x < 0]  => Vector [0 - velocity.x, velocity.y]
    _                                => velocity
  )

  newPosition = match () (
    _ [position.y + velocity.y > 20] => Vector [position.x, position.y - (position.y - 20) + 1]
    _ [position.x + velocity.x > 80] => Vector [position.x - (position.x - 80), position.y]
    _ [position.x + velocity.x < 0]  => Vector [1 - position.x, position.y]
    _                                => position
  )

  positionX = '_toFixed newPosition.(0)
  positionY = '_toFixed newPosition.(1)

  print $ esc "[2J" esc "[" positionY ";" positionX "H" "‚óè"

  sleep (1 / 30)

  (newPosition + newVelocity, newVelocity + gravity)
}
