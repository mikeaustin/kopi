Ship = position => (type: Ship, position: position)

objects = [
  Ship (position: (Vector 10, 20))
]

print $ objects | _map object => match object (
  Ship, position => Ship (position + (Vector 10, 10))
)


f = 0 => "Zero"
g = n => match n (
  f
  n => "Nonzero"
)

compose = f1 => f2 => arg => match arg (
  f1
  f2
)

f = 0 => "Zero"
f = compose f n => "Nonzero"

print $ f 0
